import numpy as np
import pandas as pol def PCA(X , num components):

(X_meaned) = X - np.mean(&, axis= 0)

cow _mat = np.cov (X meaned, rowvar = False)

eigen_values , eigen_vectors = np. 1inalg. eigh (cov_mat)

sorted index = np.argsort (eigen values) I:: -1]
sorted eigenvalue = eigen values [sorted index]
sorted _eigenvectors = eigen_vectorsI:,sorted_index]

eigenvector subset = sorted eigenvectors[:, O:num components]

X_reduced = np.dot (eigenvector_subset.transpose (), X _meaned. transpose () ).transpose ()
return X reduced
data = pd.read csv("C:/Users\\Desktop\MScIT SEM 3\machine learning pracs/iris.cav")
print (data. head ())
abreDare the deta
x = data.ilocI:,0:91
zorepare the target
target = data.ilocI:,4]
print (x.head ())
print (target. head ())

mat_ reduced = PCA (X , 2)
principal df = pd. DataFrame (mat reduced , columns = ['PCI', 'PC2'])

principal_df = pd.concat ([principal_df, pd.Dataframe (target)] , axis = 1)
print (principal df.head))
import seaborn as sb 
import matplotlib.pyplot as plt
plt.figure (figsize = (6, 6))

 sb. scatterplot (data = principal_df
,x = 'PCI",
, y = 'PCa', s = 60 , palette= 'icefire')
